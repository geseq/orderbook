name: Go

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pull-requests: write
  checks: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: "stable"

      - name: Build
        run: go build -v ./...

      - name: Run Tests and Generate Test Report
        run: |
          mkdir -p reports
          go test -v -json ./... > reports/report.json

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: 'reports/report.json'
          check_name: 'Go Tests'
          comment_title: 'Go Test Results'
          commit: ${{ github.event.pull_request.head.sha || github.sha }}
          event_file: ${{ github.event_path }}
          event_name: ${{ github.event_name }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          hide_comments: 'all but latest'
          deduplicate_classes_by_file_name: true

  benchmark:
    name: Run Go benchmarks
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v4
        with:
          go-version: '1.x'

      - name: Run benchmarks
        run: |
          mkdir -p benchmarks
          go test -bench . -benchmem -run=^$ ./... > benchmarks/benchmark.txt

      - name: Post Benchmark Results
        uses: benchmark-action/github-action-benchmark@v1
        with:
          tool: 'go'
          output-file-path: 'benchmarks/benchmark.txt'
          github-token: ${{ secrets.GITHUB_TOKEN }}
          ref: 'main'
          comment-on-alert: true
          alert-threshold: '15%'
          fail-on-alert: true
          summary-always: true
